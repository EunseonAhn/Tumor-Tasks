<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.1.2">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'session': '001', 'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="PictureNaming" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="ITI = 0&amp;#10;print(ITI)&amp;#10;&amp;#10;win.mouseVisible = False&amp;#10;&amp;#10;ori = 0&amp;#10;#d.setFIOState(1,1)&amp;#10;#d.setFIOState(1,0)&amp;#10;#d.setFIOState(7,1)&amp;#10;#d.setFIOState(7,0)" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="ITI = 0;&amp;#10;console.log(ITI);&amp;#10;win.mouseVisible = false;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="import * as random from 'random';&amp;#10;var ITI;&amp;#10;ITI = (0.5 + (random.random() * 0.5));&amp;#10;console.log(ITI);&amp;#10;image.setOri = ori;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="import random&amp;#10;ITI = 0.5 + random.random()*0.5&amp;#10;print(ITI)&amp;#10;&amp;#10;if rotate.keys == 'right':&amp;#10;    ori += 90&amp;#10;elif rotate.keys == 'left':&amp;#10;    ori -= 90&amp;#10;&amp;#10;&amp;#10;image.ori = ori&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$stimFile" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="set every repeat" val="$ori" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="$ITI" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="height" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space', 'e', 'c', 'b', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <KeyboardComponent name="rotate">
        <Param name="allowedKeys" updates="set every repeat" val="'left', 'right'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="rotate" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Instruction">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="In this task, we will show you a variety of pictures. Please identify the object in the picture as fast as you can with a single word. As soon as you think of the word, say it out loud. For example, if we show you a picture of a boat, you say &quot;BOAT.&quot; Some images could have more than one answer. Just say the best answer.&amp;#10;&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'space', 'e', 'b', 'c', 'd'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="LabJack">
        <Param name="Begin Experiment" updates="constant" val="&amp;#10;#from psychopy.hardware.labjacks import u3&amp;#10;&amp;#10;#d = u3.U3()&amp;#10;&amp;#10;#for i in range(8):&amp;#10;#    d.setFIOState(1,1)&amp;#10;#    d.setFIOState(1,0)&amp;#10;#    d.setFIOState(7,1)&amp;#10;#    d.setFIOState(7,0)&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="LabJack" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instruction"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('stimFile', 'stims/Bananaclr.jpg')]), OrderedDict([('stimFile', 'stims/Bearclr.jpg')]), OrderedDict([('stimFile', 'stims/Bedclr.jpg')]), OrderedDict([('stimFile', 'stims/Bicycleclr.jpg')]), OrderedDict([('stimFile', 'stims/Birdclr.jpg')]), OrderedDict([('stimFile', 'stims/Bookclr.jpg')]), OrderedDict([('stimFile', 'stims/Cakeclr.jpg')]), OrderedDict([('stimFile', 'stims/Carclr.jpg')]), OrderedDict([('stimFile', 'stims/Catclr.jpg')]), OrderedDict([('stimFile', 'stims/Chairclr.jpg')]), OrderedDict([('stimFile', 'stims/Chickenclr.jpg')]), OrderedDict([('stimFile', 'stims/Clockclr.jpg')]), OrderedDict([('stimFile', 'stims/Cornclr.jpg')]), OrderedDict([('stimFile', 'stims/Cowclr.jpg')]), OrderedDict([('stimFile', 'stims/Dogclr.jpg')]), OrderedDict([('stimFile', 'stims/Duckclr.jpg')]), OrderedDict([('stimFile', 'stims/Drumclr.jpg')]), OrderedDict([('stimFile', 'stims/Elephantclr.jpg')]), OrderedDict([('stimFile', 'stims/Footballclr.jpg')]), OrderedDict([('stimFile', 'stims/Frogclr.jpg')]), OrderedDict([('stimFile', 'stims/Glassclr.jpg')]), OrderedDict([('stimFile', 'stims/Goatclr.jpg')]), OrderedDict([('stimFile', 'stims/Gorillaclr.jpg')]), OrderedDict([('stimFile', 'stims/Guitarclr.jpg')]), OrderedDict([('stimFile', 'stims/Hammerclr.jpg')]), OrderedDict([('stimFile', 'stims/Horseclr.jpg')]), OrderedDict([('stimFile', 'stims/Houseclr.jpg')]), OrderedDict([('stimFile', 'stims/Lemonclr.jpg')]), OrderedDict([('stimFile', 'stims/Lightbulbclr.jpg')]), OrderedDict([('stimFile', 'stims/Lionclr.jpg')]), OrderedDict([('stimFile', 'stims/Monkeyclr.jpg')]), OrderedDict([('stimFile', 'stims/Mouseclr.jpg')]), OrderedDict([('stimFile', 'stims/Owlclr.jpg')]), OrderedDict([('stimFile', 'stims/Pianoclr.jpg')]), OrderedDict([('stimFile', 'stims/Pigclr.jpg')]), OrderedDict([('stimFile', 'stims/Pineappleclr.jpg')]), OrderedDict([('stimFile', 'stims/Rabbitclr.jpg')]), OrderedDict([('stimFile', 'stims/Roosterclr.jpg')]), OrderedDict([('stimFile', 'stims/Scissorsclr.jpg')]), OrderedDict([('stimFile', 'stims/Sealclr.jpg')]), OrderedDict([('stimFile', 'stims/Spoonclr.jpg')]), OrderedDict([('stimFile', 'stims/Sunclr.jpg')]), OrderedDict([('stimFile', 'stims/Swanclr.jpg')]), OrderedDict([('stimFile', 'stims/Tigerclr.jpg')]), OrderedDict([('stimFile', 'stims/Trainclr.jpg')]), OrderedDict([('stimFile', 'stims/Treeclr.jpg')]), OrderedDict([('stimFile', 'stims/Turtleclr.jpg')]), OrderedDict([('stimFile', 'stims/Umbrellaclr.jpg')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="images.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
